{"ast":null,"code":"var _jsxFileName = \"/Users/ha.anna/Desktop/coding/its-haanna.github.io/Scrimba_Projects/react_meme_generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport data from '../memesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [memeImage, setMemeImage] = React.useState('');\n\n  function getMemeImage(event) {\n    event.preventDefault();\n    const {\n      data: {\n        memes\n      }\n    } = data;\n    const randomNum = Math.floor(Math.random() * memes.length);\n    setMemeImage(prevMemeImage => prevMemeImage = memes[randomNum].url);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sr-only\",\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"meme-generator\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"top-text\",\n        className: \"sr-only\",\n        children: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"top-text\",\n        name: \"top text\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bottom-text\",\n        className: \"sr-only\",\n        children: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"bottom-text\",\n        name: \"bottom text\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"submit-button\",\n        value: \"Submit\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: memeImage,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Meme, \"rOSMAZy9kzh1VWy0vG7jIp0+r9Q=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","data","Meme","memeImage","setMemeImage","useState","getMemeImage","event","preventDefault","memes","randomNum","Math","floor","random","length","prevMemeImage","url"],"sources":["/Users/ha.anna/Desktop/coding/its-haanna.github.io/Scrimba_Projects/react_meme_generator/src/components/Meme.js"],"sourcesContent":["import React from 'react'\nimport data from '../memesData'\n\nexport default function Meme() {\n  const [memeImage, setMemeImage] = React.useState('')\n\n\n  function getMemeImage(event) {\n    event.preventDefault()\n    const { data: { memes } } = data\n    const randomNum = Math.floor(Math.random() * memes.length)\n    setMemeImage(prevMemeImage => prevMemeImage = memes[randomNum].url)\n  }\n\n  return (\n    <main>\n      <h1 className=\"sr-only\">Meme Generator</h1>\n      <form className=\"meme-generator\">\n        <label htmlFor=\"top-text\" className=\"sr-only\">Top text</label>\n        <input type=\"text\" id=\"top-text\" name=\"top text\" placeholder=\"Top text\" />\n        <label htmlFor=\"bottom-text\" className=\"sr-only\">Bottom text</label>\n        <input type=\"text\" id=\"bottom-text\" name=\"bottom text\" placeholder=\"Bottom text\" />\n        <button type=\"submit\" id=\"submit-button\" value=\"Submit\" onClick={getMemeImage}>Get a new meme image</button>\n      </form>\n      <img src={memeImage} alt=\"\" />\n\n    </main>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;;EAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3BA,KAAK,CAACC,cAAN;IACA,MAAM;MAAEP,IAAI,EAAE;QAAEQ;MAAF;IAAR,IAAsBR,IAA5B;IACA,MAAMS,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAlB;IACAV,YAAY,CAACW,aAAa,IAAIA,aAAa,GAAGN,KAAK,CAACC,SAAD,CAAL,CAAiBM,GAAnD,CAAZ;EACD;;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,UAAf;QAA0B,SAAS,EAAC,SAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,UAAtB;QAAiC,IAAI,EAAC,UAAtC;QAAiD,WAAW,EAAC;MAA7D;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,OAAO,EAAC,aAAf;QAA6B,SAAS,EAAC,SAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,aAAtB;QAAoC,IAAI,EAAC,aAAzC;QAAuD,WAAW,EAAC;MAAnE;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAQ,IAAI,EAAC,QAAb;QAAsB,EAAE,EAAC,eAAzB;QAAyC,KAAK,EAAC,QAA/C;QAAwD,OAAO,EAAEV,YAAjE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eASE;MAAK,GAAG,EAAEH,SAAV;MAAqB,GAAG,EAAC;IAAzB;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAzBuBD,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}