{"ast":null,"code":"var _jsxFileName = \"/Users/ha.anna/Desktop/coding/its-haanna.github.io/Scrimba_Projects/react_meme_generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport memesData from '../memesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMeme, setAllMeme] = React.useState(memesData);\n  React.useEffect(function () {\n    fetch(`https://api.imgflip.com/get_memes`).then(res => res.json()).then(data => setAllMeme(data));\n  }, [meme.randomImage]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => {\n      return { ...prevMeme,\n        [name]: value\n      };\n    });\n  }\n\n  function getMemeImage(event) {\n    event.preventDefault();\n    const {\n      data: {\n        memes\n      }\n    } = allMeme;\n    const randomNum = Math.floor(Math.random() * memes.length);\n    const url = memes[randomNum].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sr-only\",\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"meme-generator\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"top-text\",\n        className: \"sr-only\",\n        children: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"top-text\",\n        name: \"topText\",\n        placeholder: \"Top text\",\n        onChange: handleChange,\n        value: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bottom-text\",\n        className: \"sr-only\",\n        children: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"bottom-text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom text\",\n        onChange: handleChange,\n        value: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit-button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        alt: \"\",\n        className: \"meme-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Meme, \"vvLmKeIOLeL9Axp2qnx8/V5BAis=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMeme","setAllMeme","useEffect","fetch","then","res","json","data","handleChange","event","name","value","target","prevMeme","getMemeImage","preventDefault","memes","randomNum","Math","floor","random","length","url"],"sources":["/Users/ha.anna/Desktop/coding/its-haanna.github.io/Scrimba_Projects/react_meme_generator/src/components/Meme.js"],"sourcesContent":["import React from 'react'\nimport memesData from '../memesData'\n\nexport default function Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  })\n\n  const [allMeme, setAllMeme] = React.useState(memesData)\n\n  React.useEffect(function () {\n    fetch(`https://api.imgflip.com/get_memes`)\n      .then(res => res.json())\n      .then(data => setAllMeme(data))\n  }, [meme.randomImage])\n\n  function handleChange(event) {\n    const { name, value } = event.target\n    setMeme(prevMeme => {\n      return {\n        ...prevMeme,\n        [name]: value\n      }\n    })\n  }\n\n\n\n  function getMemeImage(event) {\n    event.preventDefault()\n    const { data: { memes } } = allMeme\n    const randomNum = Math.floor(Math.random() * memes.length)\n    const url = memes[randomNum].url\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }))\n  }\n\n  return (\n    <main>\n      <h1 className=\"sr-only\">Meme Generator</h1>\n      <form className=\"meme-generator\">\n        <label htmlFor=\"top-text\" className=\"sr-only\">Top text</label>\n\n        <input\n          type=\"text\"\n          id=\"top-text\"\n          name=\"topText\"\n          placeholder=\"Top text\"\n          onChange={handleChange}\n          value={meme.topText}\n        />\n\n        <label htmlFor=\"bottom-text\" className=\"sr-only\">Bottom text</label>\n\n        <input\n          type=\"text\"\n          id=\"bottom-text\"\n          name=\"bottomText\"\n          placeholder=\"Bottom text\"\n          onChange={handleChange}\n          value={meme.bottomText}\n        />\n\n        <button id=\"submit-button\" onClick={getMemeImage}>Get a new meme image</button>\n      </form>\n      <div className=\"meme\">\n        <img src={meme.randomImage} alt=\"\" className=\"meme-img\" />\n        <h2 className=\"meme-text top\">{meme.topText}</h2>\n        <h2 className=\"meme-text bottom\">{meme.bottomText}</h2>\n      </div>\n\n    </main>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}