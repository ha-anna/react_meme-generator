{"ast":null,"code":"var _jsxFileName = \"/Users/ha.anna/Desktop/coding/its-haanna.github.io/Scrimba_Projects/react_meme_generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport memesData from '../memesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImage, setAllMemeImage] = React.useState(memesData);\n\n  function getMemeImage(event) {\n    event.preventDefault();\n    const {\n      data: {\n        memes\n      }\n    } = allMemeImage;\n    const randomNum = Math.floor(Math.random() * memes.length);\n    const url = memes[randomNum].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sr-only\",\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"meme-generator\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"top-text\",\n        className: \"sr-only\",\n        children: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"top-text\",\n        name: \"topText\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bottom-text\",\n        className: \"sr-only\",\n        children: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"bottom-text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit-button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        alt: \"\",\n        className: \"meme-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text top\",\n        children: \"One does not simply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text bottom\",\n        children: \"Walk into Mordor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Meme, \"/+INndpmuMCr3KA66IWaykZh5QU=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImage","setAllMemeImage","getMemeImage","event","preventDefault","data","memes","randomNum","Math","floor","random","length","url","prevMeme"],"sources":["/Users/ha.anna/Desktop/coding/its-haanna.github.io/Scrimba_Projects/react_meme_generator/src/components/Meme.js"],"sourcesContent":["import React from 'react'\nimport memesData from '../memesData'\n\nexport default function Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  })\n\n  const [allMemeImage, setAllMemeImage] = React.useState(memesData)\n\n\n  function getMemeImage(event) {\n    event.preventDefault()\n    const { data: { memes } } = allMemeImage\n    const randomNum = Math.floor(Math.random() * memes.length)\n    const url = memes[randomNum].url\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }))\n  }\n\n  return (\n    <main>\n      <h1 className=\"sr-only\">Meme Generator</h1>\n      <form className=\"meme-generator\">\n        <label htmlFor=\"top-text\" className=\"sr-only\">Top text</label>\n\n        <input\n          type=\"text\"\n          id=\"top-text\"\n          name=\"topText\"\n          placeholder=\"Top text\" />\n\n        <label htmlFor=\"bottom-text\" className=\"sr-only\">Bottom text</label>\n\n        <input\n          type=\"text\"\n          id=\"bottom-text\"\n          name=\"bottomText\"\n          placeholder=\"Bottom text\" />\n\n        <button id=\"submit-button\" onClick={getMemeImage}>Get a new meme image</button>\n      </form>\n      <div className=\"meme\">\n        <img src={meme.randomImage} alt=\"\" className=\"meme-img\" />\n        <h2 className=\"meme-text top\">One does not simply</h2>\n        <h2 className=\"meme-text bottom\">Walk into Mordor</h2>\n      </div>\n\n    </main>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe;IACrCC,OAAO,EAAE,EAD4B;IAErCC,UAAU,EAAE,EAFyB;IAGrCC,WAAW,EAAE;EAHwB,CAAf,CAAxB;EAMA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,KAAK,CAACK,QAAN,CAAeJ,SAAf,CAAxC;;EAGA,SAASU,YAAT,CAAsBC,KAAtB,EAA6B;IAC3BA,KAAK,CAACC,cAAN;IACA,MAAM;MAAEC,IAAI,EAAE;QAAEC;MAAF;IAAR,IAAsBN,YAA5B;IACA,MAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAlB;IACA,MAAMC,GAAG,GAAGN,KAAK,CAACC,SAAD,CAAL,CAAiBK,GAA7B;IACAjB,OAAO,CAACkB,QAAQ,KAAK,EACnB,GAAGA,QADgB;MAEnBd,WAAW,EAAEa;IAFM,CAAL,CAAT,CAAP;EAID;;EAED,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,UAAf;QAA0B,SAAS,EAAC,SAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,UAFL;QAGE,IAAI,EAAC,SAHP;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QAHF,eASE;QAAO,OAAO,EAAC,aAAf;QAA6B,SAAS,EAAC,SAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAWE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,aAFL;QAGE,IAAI,EAAC,YAHP;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QAXF,eAiBE;QAAQ,EAAE,EAAC,eAAX;QAA2B,OAAO,EAAEV,YAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAqBE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAK,GAAG,EAAER,IAAI,CAACK,WAAf;QAA4B,GAAG,EAAC,EAAhC;QAAmC,SAAS,EAAC;MAA7C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAI,SAAS,EAAC,eAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAI,SAAS,EAAC,kBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GAnDuBN,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}